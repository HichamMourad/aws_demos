# code: language=ansible
---
- name: AWS ec2 de-provisioning including VPC and all related resources
  connection: local
  hosts: localhost
  gather_facts: false
  # The paramater region will be set for all ec2 modules by specifying it here under module_defaults
  module_defaults:
    group/aws:
      region: "{{ ec2_region | default('us-east-2') }}"
  vars:
    instance_name: "aws-demo1-ec2"
    owner_tag: "aws-demo1-user"

  tasks:
    - name: grab facts for aws-demo1-ec2
      amazon.aws.ec2_instance_info:
        filters:
          "tag:Name": "aws-demo1-ec2"
      register: ec2_node_info

    - name: destroy the EC2 instance
      amazon.aws.ec2_instance:
        filters:
          "tag:Name": "aws-demo1-ec2"
        state: absent
        instance_ids: "{{ ec2_node_info.instances | map(attribute='instance_id') | list }}"
      register: result
      when:
        - ec2_node_info.instances is defined
        - ec2_node_info.instances

    - name: Get the VPC ID
      amazon.aws.ec2_vpc_net_info:
        filters:
          "tag:Name": "aws-demo1-vpc"
      register: vpc_net_facts

    -name: Print the VPC ID
      ansibl.util.debug:
        msg: 'The VPC ID is "{{ vpc_net_facts.vpcs[0].id }}"'

    - name: Delete the EC2 security group for aws-demo1-vpc
      amazon.aws.ec2_group:
        name": "aws-demo1-sg"
        state: absent
      register: delete_sg
      until: delete_sg is not failed
      retries: 50
      delegate_to: localhost
      run_once: true
      when: vpc_net_facts.vpcs|length > 0

    - name: Delete the subnet for aws-demo1-vpc
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc_net_facts.vpcs[0].id }}"
        cidr: "192.168.0.0/28"
        filters:
          "tag:Name": "aws-demo1-subnet"
        state: absent
      delegate_to: localhost
      run_once: true
      when: vpc_net_facts.vpcs|length > 0

    - name: Delete the vpc Internet Gateway for aws-demo1-vpc
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{vpc_net_facts.vpcs[0].id}}"
        filters:
          "tag:Name": "aws-demo1-igw"
        state: absent
      delegate_to: localhost
      run_once: true
      when: vpc_net_facts.vpcs|length > 0

    - name: grab the route information for aws-demo1-vpc
      amazon.aws.ec2_vpc_route_table_info:
        filters:
          vpc-id: "{{ vpc_net_facts.vpcs[0].id }}"
      register: route_table_facts
      delegate_to: localhost
      run_once: true
      when: vpc_net_facts.vpcs|length > 0

    - name: Delete the VPC public Subnet Route table entry
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc_net_facts.vpcs[0].id }}"
        route_table_id: "{{ item.id }}"
        lookup: id
        filters:
          "tag:Name": aws_demo1_default_route  
        state: absent
      loop: "{{ route_table_facts.route_tables }}"
      when:
        - vpc_net_facts.vpcs|length > 0
        - item.associations == []
        
    - name: Delete the AWS VPC aws-demo1-vpc
      amazon.aws.ec2_vpc_net:
        name: "aws-demo1-vpc"
        cidr_block: "192.168.0.0/24"
        state: absent
      register: delete_vpc
      until: delete_vpc is not failed
      retries: 50
      delegate_to: localhost
      run_once: true
      when: vpc_net_facts.vpcs|length > 0

    - name: remove ssh key pair
      amazon.aws.ec2_key:
        name: "aws-demo1-key"
        state: absent
      register: create_key
